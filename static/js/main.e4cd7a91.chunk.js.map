{"version":3,"sources":["components/ContactsForm/ContactsForm.module.css","App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContacsList","contacts","onDeleteContact","className","s","list","map","id","name","number","item","type","button","onClick","ContactsForm","onSubmit","useState","setName","setNumber","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","reset","form","preventDefault","label","htmlFor","placeholder","pattern","title","required","autoComplete","onChange","Filter","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","container","some","contact","toLowerCase","alert","ContactList","normalizedFilter","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+IACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,OAAS,+B,iBCAjGD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,gBCA7DD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,kBCA7FD,EAAOC,QAAU,CAAC,MAAQ,wB,uKCgCXC,EA9BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,oBAAIC,UAAWC,IAAEC,KAAjB,SACGJ,EAASK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAaN,UAAWC,IAAEM,KAA1B,UACE,iCACGF,EADH,MACYC,KAEZ,wBACEE,KAAK,SACLR,UAAWC,IAAEQ,OACbC,QAAS,kBAAMX,EAAgBK,IAHjC,sBAJOA,S,gBC0EAO,MA5Ef,YAAqC,IAAbC,EAAY,EAAZA,SACtB,EAAwBC,mBAAS,IAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOP,EAAP,KAAeS,EAAf,KAEMC,EAAcC,cACdC,EAAgBD,cAEhBE,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBhB,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,MAEd,OAAQjB,GACN,IAAK,OACHS,EAAQQ,GACR,MAEF,IAAK,SACHP,EAAUO,GACV,MAEF,QACE,SAYAC,EAAQ,WACZT,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMf,UAAWC,IAAEuB,KAAMZ,SAdN,SAAAQ,GACnBA,EAAEK,iBAEFb,EAASP,EAAMC,GAEfiB,KASA,UACE,wBAAOvB,UAAWC,IAAEyB,MAAOC,QAASX,EAApC,iBAEE,uBACER,KAAK,OACLoB,YAAY,aACZvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,aAAa,MACbV,MAAOjB,EACP4B,SAAUd,EACVf,GAAIY,OAGR,wBAAOhB,UAAWC,IAAEyB,MAAOC,QAAST,EAApC,mBAEE,uBACEV,KAAK,MACLH,KAAK,SACLwB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,aAAa,MACbJ,YAAY,eACZN,MAAOhB,EACP2B,SAAUd,EACVf,GAAIc,OAIR,wBAAQV,KAAK,SAASR,UAAWC,IAAEQ,OAAnC,6B,iBC3DSyB,EAZA,SAAC,GAAD,IAAGZ,EAAH,EAAGA,MAAOW,EAAV,EAAUA,SAAV,OACb,wBAAOjC,UAAWC,IAAEyB,MAApB,kCAEE,uBAAOlB,KAAK,OAAOc,MAAOA,EAAOW,SAAUA,QC6DhCE,MA5Df,WACE,MAAgCtB,oBAAS,WAAO,IAAD,EAC7C,iBAAOuB,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA9C,QAA8D,MADhE,mBAAO1C,EAAP,KAAiB2C,EAAjB,KAIA,EAA4B5B,mBAAS,IAArC,mBAAO6B,EAAP,KAAeC,EAAf,KAuCA,OArCAC,qBAAU,WACRN,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAUhD,MACtD,CAACA,IAoCF,sBAAKE,UAAWC,IAAE8C,UAAlB,UACE,oBAAI/C,UAAWC,IAAE6B,MAAjB,uBAEA,cAAC,EAAD,CAAclB,SArCC,SAACP,EAAMC,GACxB,GACER,EAASkD,MACP,SAAAC,GAAO,OAAIA,EAAQ5C,KAAK6C,gBAAkB7C,EAAK6C,iBAGjD,OAAOC,MAAM,GAAD,OAAI9C,EAAJ,4BAEZ,IAAM4C,EAAU,CACd7C,GAAIa,cACJZ,OACAC,UAEFmC,GAAY,SAAA3C,GAAQ,4BAAQA,GAAR,CAAkBmD,UA0BtC,oBAAIjD,UAAWC,IAAE6B,MAAjB,sBACA,cAAC,EAAD,CAAQR,MAAOoB,EAAQT,SAnBN,SAAAb,GACnBuB,EAAUvB,EAAEC,cAAcC,UAmBxB,cAAC8B,EAAD,CACEtD,SAjBqB,WACzB,IAAMuD,EAAmBX,EAAOQ,cAEhC,OAAOpD,EAAS4C,QAAO,SAAAO,GAAO,OAC5BA,EAAQ5C,KAAK6C,cAAcI,SAASD,MAaxBE,GACVxD,gBA1BgB,SAAAyD,GACpBf,EAAY3C,EAAS4C,QAAO,SAAAO,GAAO,OAAIA,EAAQ7C,KAAOoD,aC/B1DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e4cd7a91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__Fw6gV\",\"label\":\"ContactsForm_label__3eRPl\",\"button\":\"ContactsForm_button__UiwAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1D5kD\",\"title\":\"App_title__1rKYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__jQ0jr\",\"item\":\"ContactList_item__r-2zi\",\"button\":\"ContactList_button__W8ZMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__pgwf8\"};","import s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContacsList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.item}>\n        <span>\n          {name} : {number}\n        </span>\n        <button\n          type=\"submit\"\n          className={s.button}\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContacsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContacsList;\n","import { useState } from 'react';\nimport s from './ContactsForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction ContactsForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={nameInputId}>\n        Name\n        <input\n          type=\"text\"\n          placeholder=\"Enter name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n          id={nameInputId}\n        />\n      </label>\n      <label className={s.label} htmlFor={numberInputId}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          autoComplete=\"off\"\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n          id={numberInputId}\n        />\n      </label>\n\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\nexport default ContactsForm;\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport s from './App.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from './components/ContactList';\nimport ContactsForm from './components/ContactsForm';\nimport Filter from './components/Filter';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      const contact = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n      setContacts(contacts => [...contacts, contact]);\n    }\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n\n      <ContactsForm onSubmit={addContact} />\n\n      <h2 className={s.title}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}